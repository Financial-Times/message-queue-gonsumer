version: 2
jobs:
  build:
    working_directory: /message-queue-gonsumer
    docker:
      - image: golang:1
        environment:
          CIRCLE_TEST_REPORTS: /tmp/test-results
          CIRCLE_COVERAGE_REPORT: /tmp/coverage-results
    steps:
      - checkout
      - run:
          name: External Dependencies
          command: |
            GO111MODULE=off go get github.com/mattn/goveralls
            GO111MODULE=off go get github.com/jstemmer/go-junit-report
            curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.21.0
            wget https://raw.githubusercontent.com/Financial-Times/upp-coding-standard/v1.0.0/golangci-config/.golangci.yml
      - run:
          name: Test Results
          command: |
            mkdir -p ${CIRCLE_TEST_REPORTS}
            mkdir -p ${CIRCLE_COVERAGE_REPORT}
      - run:
          name: Go Build
          command: go build -mod=readonly -v ./...
      - run:
          name: Run Tests and Create Coverage Report
          command: go test -mod=readonly -race -cover -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out ./... | go-junit-report > ${CIRCLE_TEST_REPORTS}/junit.xml
      - run:
          name: Run Linters
          command: golangci-lint run --config=.golangci.yml
      - run:
          name: Upload Coverage
          command: goveralls -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out -service=circle-ci -repotoken=${COVERALLS_TOKEN}
      - store_test_results:
          path: /tmp/test-results
workflows:
  version: 2
  test-and-build-docker:
    jobs:
      - build
